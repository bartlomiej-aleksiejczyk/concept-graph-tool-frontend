/**
 * Generated by orval v6.25.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'






  /**
 * @summary Update a node in a graph
 */
export const updateNodeInGraph = <TData = AxiosResponse<ConceptGraphNodeDTO>>(
    nodeId: number,
    conceptGraphNodeDTO: ConceptGraphNodeDTO, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `/api/v1/graphs/nodes/${nodeId}`,
      conceptGraphNodeDTO,options
    );
  }

/**
 * @summary Remove a node from a graph
 */
export const removeNodeFromGraph = <TData = AxiosResponse<void>>(
    nodeId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `/api/v1/graphs/nodes/${nodeId}`,options
    );
  }

/**
 * @summary Create an empty graph
 */
export const createEmptyGraph = <TData = AxiosResponse<StructuredGraphDTO>>(
    newGraphDTO: NewGraphDTO, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/api/v1/graphs`,
      newGraphDTO,options
    );
  }

/**
 * @summary Add a node to a graph
 */
export const addNodeToGraph = <TData = AxiosResponse<ConceptGraphNodeDTO>>(
    graphId: number,
    conceptGraphNodeDTO: ConceptGraphNodeDTO, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/api/v1/graphs/${graphId}/nodes`,
      conceptGraphNodeDTO,options
    );
  }

/**
 * @summary Get the full graph structured by parts
 */
export const getGraphStructuredByParts = <TData = AxiosResponse<StructuredGraphDTO>>(
    graphId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/api/v1/graphs/${graphId}/structured`,options
    );
  }

/**
 * @summary Remove an entire graph
 */
export const removeGraph = <TData = AxiosResponse<void>>(
    graphId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `/api/v1/graphs/${graphId}`,options
    );
  }

export type UpdateNodeInGraphResult = AxiosResponse<ConceptGraphNodeDTO>
export type RemoveNodeFromGraphResult = AxiosResponse<void>
export type CreateEmptyGraphResult = AxiosResponse<StructuredGraphDTO>
export type AddNodeToGraphResult = AxiosResponse<ConceptGraphNodeDTO>
export type GetGraphStructuredByPartsResult = AxiosResponse<StructuredGraphDTO>
export type RemoveGraphResult = AxiosResponse<void>
